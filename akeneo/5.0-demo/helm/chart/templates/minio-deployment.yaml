{{- if .Values.objectStorage.minio.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "akeneo.fullname" . }}-minio-deployment
  labels:
    {{- include "akeneo.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      name: {{ include "akeneo.name" . }}
      role: minio
  template:
    metadata:
      labels:
        {{- include "akeneo.labels" . | nindent 8 }}
        role: minio
    spec:
      containers:
      - name: minio
        image: minio/minio
        args: ["server", "/data"]
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        envFrom:
          - secretRef:
              name:  {{ include "akeneo.fullname" . }}-minio-secret
        ports:
        - containerPort: {{ .Values.objectStorage.minio.port }}
          name: http
        readinessProbe:
          initialDelaySeconds: 3
          tcpSocket:
            port: {{ .Values.objectStorage.minio.port }}
        livenessProbe:
          initialDelaySeconds: 3
          httpGet:
            path: /minio/health/live
            port: {{ .Values.objectStorage.minio.port }}
        volumeMounts:
          - mountPath: /data
            name: data
        lifecycle:
          postStart:
            exec:
              command:
                - mkdir
                - -p
                - /data/{{ .Values.objectStorage.bucket }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "akeneo.fullname" . }}-minio-pvc
{{- end }}
