apiVersion: apps/v1
kind: Deployment
metadata:
  name: akeneo
  labels:
    app.kubernetes.io/name: akeneo
    app.kubernetes.io/version: {{ .Values.akeneo.version | quote }}
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: akeneo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: akeneo
      app.kubernetes.io/version: {{ .Values.akeneo.version | quote }}
      app.kubernetes.io/component: frontend
      app.kubernetes.io/part-of: akeneo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: akeneo
        app.kubernetes.io/version: {{ .Values.akeneo.version | quote }}
        app.kubernetes.io/component: frontend
        app.kubernetes.io/part-of: akeneo
    spec:
      containers:
      - name: akeneo
        image: {{ include "akeneo.image" . }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        - name: SYMFONY_ENV
          value: prod
        ports:
        - containerPort: {{ .Values.akeneo.port }}
          name: http
        #lifecycle:
        #  postStart:
        #    exec:
        #      command: ["sh", "-c", "/app/bin/console d:s:u --force"]
